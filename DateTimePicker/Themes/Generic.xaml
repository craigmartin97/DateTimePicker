<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:formats="clr-namespace:DateTimePicker"
    xmlns:converters="clr-namespace:DateTimePicker.Converters"
    xmlns:customComponents="clr-namespace:DateTimePicker.CustomComponents"
    xmlns:gl="clr-namespace:System.Globalization;assembly=mscorlib">

    <converters:TimeConverter  x:Key="TimeConverter" />
    <converters:DateConverter  x:Key="DateConverter" />
    <converters:TextConverter x:Key="TextConverter" />
    <converters:NotNullConverter x:Key="NotNullConverter" />

    <Style TargetType="{x:Type customComponents:DateTimePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customComponents:DateTimePicker}">
                    <Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <customComponents:DateTimeTextBox x:Name="PART_MAIN_TEXT_BOX" 
                                                              FontSize="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FontSize}"
                                                              VerticalContentAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment}">
                                <customComponents:DateTimeTextBox.Style>
                                    <Style TargetType="{x:Type customComponents:DateTimeTextBox}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Format, Converter={StaticResource NotNullConverter}}" Value="False" />
                                                </MultiDataTrigger.Conditions>

                                                <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                                                Path=Value, UpdateSourceTrigger=PropertyChanged, StringFormat='d',
                                                    ConverterCulture={x:Static gl:CultureInfo.CurrentCulture}}" />
                                            </MultiDataTrigger>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=FormatString, Converter={StaticResource NotNullConverter}}" Value="False" />
                                                </MultiDataTrigger.Conditions>

                                                <Setter Property="Text">
                                                    <Setter.Value>
                                                        <MultiBinding Converter="{StaticResource TextConverter}" 
                                                                      ConverterCulture="{x:Static gl:CultureInfo.CurrentCulture}"
                                                                      StringFormat="{}{0}">
                                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Value" UpdateSourceTrigger="PropertyChanged" />
                                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="FormatString" />
                                                        </MultiBinding>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </customComponents:DateTimeTextBox.Style>

                            </customComponents:DateTimeTextBox>

                            <UniformGrid Grid.Column="1" Columns="2">
                                <UniformGrid Rows="2">
                                    <RepeatButton x:Name="PART_MAIN_UP_BUTTON">
                                        <RepeatButton.Content>
                                            <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=UpSource}" />
                                        </RepeatButton.Content>
                                    </RepeatButton>

                                    <RepeatButton x:Name="PART_MAIN_DOWN_BUTTON">
                                        <RepeatButton.Content>
                                            <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DownSource}" />
                                        </RepeatButton.Content>
                                    </RepeatButton>
                                </UniformGrid>

                                <ToggleButton x:Name="DisplayPopupButton">
                                    <ToggleButton.Content>
                                        <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=CalendarSource}" />
                                    </ToggleButton.Content>
                                </ToggleButton>

                                <Popup IsOpen="{Binding Path=IsChecked, ElementName=DisplayPopupButton}" 
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=PART_MAIN_TEXT_BOX}"
                                       StaysOpen="False">
                                    <StackPanel>
                                        <Calendar SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent},
                                            Path=Value, 
                                            UpdateSourceTrigger=PropertyChanged, 
                                            Converter={StaticResource DateConverter}}" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Grid.Style>
                                                <Style TargetType="{x:Type Grid}">
                                                    <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TimeTextBoxVisibility}"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Format}" Value="{x:Static formats:Formats.ShortDate}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Grid.Style>


                                            <TextBox x:Name="PART_TIME_TEXT_BOX" 
                                                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, 
                                                        Path=Value, 
                                                UpdateSourceTrigger=PropertyChanged, 
                                                StringFormat='HH:mm', 
                                                Converter={StaticResource TimeConverter}}" />

                                            <StackPanel Grid.Column="1">
                                                <RepeatButton x:Name="TIME_UP_BUTTON" Delay="500" Interval="100">
                                                    <RepeatButton.Content>
                                                        <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=UpSource}" />
                                                    </RepeatButton.Content>
                                                </RepeatButton>

                                                <RepeatButton x:Name="TIME_DOWN_BUTTON" Delay="500" Interval="100">
                                                    <RepeatButton.Content>
                                                        <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent},Path=DownSource}" />
                                                    </RepeatButton.Content>
                                                </RepeatButton>
                                            </StackPanel>
                                        </Grid>

                                    </StackPanel>
                                </Popup>
                            </UniformGrid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
